<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cyc.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.cyc.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="old" jdbcType="INTEGER" property="old" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="created" jdbcType="BIGINT" property="created" />
    <result column="ban" jdbcType="BIT" property="ban" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, name, sex, old, phone, education, created, ban
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.cyc.model.User">
    insert into t_user (id, username, password, 
      name, sex, old, phone, 
      education, created, ban)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{old,jdbcType=INTEGER}, #{phone,jdbcType=INTEGER}, 
      #{education,jdbcType=VARCHAR}, #{created,jdbcType=BIGINT}, #{ban,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.cyc.model.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="old != null">
        old,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="ban != null">
        ban,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="old != null">
        #{old,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=BIGINT},
      </if>
      <if test="ban != null">
        #{ban,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cyc.model.User">
    update t_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="old != null">
        old = #{old,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=BIGINT},
      </if>
      <if test="ban != null">
        ban = #{ban,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cyc.model.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      old = #{old,jdbcType=INTEGER},
      phone = #{phone,jdbcType=INTEGER},
      education = #{education,jdbcType=VARCHAR},
      created = #{created,jdbcType=BIGINT},
      ban = #{ban,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>